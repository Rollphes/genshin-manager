name: CD

on:
  push:
    branches: [main]

jobs:
  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Get package version
        id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${{ steps.package-version.outputs.tag }}" -m "Release ${{ steps.package-version.outputs.tag }}"
          git push origin "${{ steps.package-version.outputs.tag }}"

      - name: Publish to NPM
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate release notes
        id: generate-notes
        uses: actions/github-script@v7
        with:
          script: |
            const { data: release } = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ steps.package-version.outputs.tag }}',
              target_commitish: 'main'
            });
            return release.body;
          result-encoding: string

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.package-version.outputs.tag }}
          name: ${{ steps.package-version.outputs.tag }}
          body: |
            ${{ steps.generate-notes.outputs.result }}

            ---

            **Package published**: https://www.npmjs.com/package/genshin-manager/v/${{ steps.package-version.outputs.version }}
            **Documentation**: https://rollphes.github.io/genshin-manager/
          draft: true
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
