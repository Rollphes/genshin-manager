permissions:
  contents: read
name: Vitest

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
  schedule:
    - cron: '0 15 * * 1' # every Monday at 15:00 UTC (0:00 JST)
  workflow_dispatch:

env:
  WORKING_DIRECTORY: .

jobs:
  test:
    name: Run test codes
    if: |
      github.event.pull_request.draft == false
      && !startsWith(github.head_ref, 'release')
      && !startsWith(github.head_ref, 'doc')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ${{ env.WORKING_DIRECTORY }}/package.json
          cache: npm
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Run Vitest with coverage
        id: vitest
        run: npx vitest run --coverage.enabled --reporter=verbose
        continue-on-error: true

      - name: Display test results
        run: |
          if [ "${{ steps.vitest.outcome }}" == "success" ]; then
            echo "✅ All tests passed successfully!"
            echo "Test run completed with coverage collection."
          else
            echo "❌ Tests failed! Check the output above for details."
            echo "::error::Vitest tests failed"
            exit 1
          fi

      - name: Show failed test details on failure
        if: failure()
        run: |
          echo "🔍 Re-running failed tests with detailed output..."
          npx vitest run --reporter=verbose --no-coverage 2>&1 || true
          echo ""
          echo "📊 Test summary:"
          echo "- Check the test output above for specific failure details"
          echo "- Failed tests will show assertion errors and stack traces"

      - name: Show coverage report
        uses: davelosert/vitest-coverage-report-action@v2
        if: steps.vitest.outcome == 'success'
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        if: steps.vitest.outcome == 'success'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
